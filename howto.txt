###############################################################################################################
#
# BerlinAPPle Java Base Image
# only, if java_base images changes)

# in Bash

cd /c/lehmann/spielwiese/berlinapple/src/berlinapple

docker build . -f Dockerfile.java_base --no-cache --force-rm
> <AAAID>

docker run -d -p 9090:8080 <AAAID>
> <BBBID>

docker commit -m "BerlinAPPle Java Base Build" -a "mrtnlhmnn" <BBBID> mrtnlhmnn/berlinapple_java_base

# optional (Attention: Do not copy pw directly from activ'aid to shell!)
# winpty docker login -u mrtnlhmnn

docker push mrtnlhmnn/berlinapple_java_base

docker stop <BBBID>

###############################################################################################################
#
# BerlinAPPle Image
#

# in IntelliJ
mvn install

# in Bash
cd /c/lehmann/spielwiese/berlinapple/src/berlinapple

docker build . -f Dockerfile --no-cache --force-rm
> <XXXID>

docker run -d -p 8080:8080 <XXXID>
> <YYYID>

docker commit -m "BerlinAPPle Build" -a "mrtnlhmnn" <YYYID> mrtnlhmnn/berlinapple

# optional (Attention: Do not copy pw directly from activ'aid to shell!)
# winpty docker login -u mrtnlhmnn

docker push mrtnlhmnn/berlinapple

docker stop <YYYID>

###############################################################################################################
#
# Deploy and run on AWS EC2 instance
#

ssh ec2-user@ec2-52-58-166-180.eu-central-1.compute.amazonaws.com -i /c/lehmann/spielwiese/berlinapple/orga/berlinapple.pem

# optional, if no docker installed
# sudo yum install -y docker
# optional, only if docker daemon not running on the EC2 instance
# sudo service docker start

sudo docker ps
sudo docker stop PID
sudo docker container ls --all
sudo docker rm <CONTAINERID>
sudo docker images
sudo docker rmi <IMAGEID>

sudo docker run -d -p 80:8080 docker.io/mrtnlhmnn/berlinapple
> <ZZZID>

# Watch logs
watch sudo docker logs <ZZZID>

# Or login, check /app/logs there
sudo docker exec -it <ZZZID> bash

###############################################################################################################
#
# Browser
#

# if port 8080 is not accessible => need to make it HTTP available in AWS!

# Need to add a "Security Group" with HTTP traffic (prob. both for inbound and outbound) and 
#   add it to the EC2 instance (Actions > Networking > Change Security Groups)

http://ec2-52-58-166-180.eu-central-1.compute.amazonaws.com/
http://ec2-52-58-166-180.eu-central-1.compute.amazonaws.com/version
